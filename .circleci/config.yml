version: 2

jobs:
  build:
    docker:
      - image: circleci/ruby:2.5.3-node-browsers
        environment:
          RAILS_ENV: test
    working_directory: ~/mitsugu-app
    steps:
      - checkout
      - restore_cache:
          name: bundle installの結果をrestore
          keys: 
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-
      - run:
          name: bundle installを実行
          command: bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          name: bundle installの結果をキャッシュ
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

  test:
    docker:
      - image: circleci/ruby:2.5.3-node-browsers
        environment:
          RAILS_ENV: test
      - image: circleci/mysql:5.7
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_ROOT_HOST: 127.0.0.1
    working_directory: ~/mitsugu-app
    steps:
      - checkout
      - restore_cache:
          name: bundle installの結果をrestore
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: bundle install
          command: bundle install --jobs=4 --retry=3 --path vendor/bundle
      - run:
          name: データベースの起動を待機
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 1m
      - run:
          name: CircleCI用のdatabase.ymlにする
          command: mv ./config/database.yml.ci ./config/database.yml
      - run:
          name: データベースのセットアップ
          command: |
            bundle exec rake db:create
            bundle exec rake db:schema:load
      - run: 
          name: テストの実行
          command: bundle exec rspec

  lint:
    docker:
      - image: circleci/ruby:2.5.3-node-browsers
    working_directory: ~/mitsugu-app
    steps:
      - checkout
      - run:
          name: bundle install
          command: bundle install --path vendor/bundle
      - run: 
          name: rubocopを実行
          command: bundle exec rubocop

workflows:
  version: 2
  workflows:
    jobs:
      - build
      - test:
          requires:
            - build
      - lint:
          requires:
            - build